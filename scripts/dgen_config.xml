<emulator>
	<!-- Name as it will appear in the emulator select screen. !-->
	<name>DGen</name>
	<shortName>Gen</shortName>
	
	<!-- File we will write to. !-->
	<configPath>dgen.cfg</configPath>
	
	<maxPlayers>2</maxPlayers>
	
	<!-- Declare any global variables or functions here. They'll stay in scope across every script in this file. 
	Not wrapped with anything. !-->
	<declarationScript>
	string value = "";
	string deviceType = "";
	string playerNum = "";
	
	void writePair(File@ f, string inputName)
	{
		f.write(deviceType + "_pad" + playerNum + "_" + inputName + " = " + value);
	}
	
	string getDGenKey(int val)
	{
		string name = getKeyName(val); //getKeyName is a global function defined by ES-config
		if(name == "left shift") //this is not an exhaustive list, but some of the more common keybinds
			name = "lshift";
		else if(name == "right shift")
			name = "rshift";
		else if(name == "return")
			name = "enter";
		else if(name == "left alt")
			name = "lalt";
		else if(name == "right alt")
			name = "ralt";
		
		return name;
	}
	</declarationScript>

	<!-- Called once, at the very beginning of writing the config file. 
	Wrapped with: void init(File@ f) { !-->
	<initScript>
	f.write("bool_joystick = true");
	</initScript>

	<!-- Called once before writing for each player.
	Wrapped with: void perPlayer(File@ f, int PLAYER_NUMBER, int DEVICE_ID) { !-->
	<perPlayerScript>
		playerNum = PLAYER_NUMBER + 1;
		
		if(DEVICE_ID == DEVICE_KEYBOARD)
			deviceType = "key";
		else
			deviceType = "joy";
	</perPlayerScript>

	<!-- Called once before each input, with arguments INPUT_NAME, INPUT_TYPE, INPUT_VALUE. 
	You probably want to update your "global" variables here for the following write.
	Wrapped with: void perInput(File@ f, string INPUT_NAME, InputType INPUT_TYPE, int INPUT_ID, int INPUT_VALUE, int DEVICE_ID) { !-->
	<perInputScript>
	
	switch(INPUT_TYPE)
	{
		case TYPE_BUTTON:
			value = "joystick" + DEVICE_ID + "-button" + INPUT_ID;
			break;
		
		case TYPE_AXIS:
			value = "joystick" + DEVICE_ID + "-axis" + INPUT_ID + "-" + ((INPUT_VALUE > 0) ? "max" : "min");
			break;
			
		case TYPE_HAT:
			value = "joystick" + DEVICE_ID + "-hat" + INPUT_ID + "-" + getHatDir(INPUT_VALUE);
			break;
		
		case TYPE_KEY:
			value = getDGenKey(INPUT_ID);
			break;
		
		default:
			print("unexpected input type?! [" + INPUT_TYPE + "]");
			break;
	}
	</perInputScript>

	<!-- List of inputs, and a script called for writing them. 
	Wrapped with: void perInput(File@ f, string INPUT_NAME, uint INPUT_TYPE, int INPUT_ID, int INPUT_VALUE, int DEVICE_ID) { !-->
	<input name="A" location="btnDown" type="BUTTON|AXIS|HAT|KEY">writePair(f, "a");</input>
	<input name="B" location="btnRight" type="BUTTON|AXIS|HAT|KEY">writePair(f, "b");</input>
	<input name="C" location="lshoulder1" type="BUTTON|AXIS|HAT|KEY">writePair(f, "c");</input>
	<input name="X" location="btnLeft" type="BUTTON|AXIS|HAT|KEY">writePair(f, "x");</input>
	<input name="Y" location="btnUp" type="BUTTON|AXIS|HAT|KEY">writePair(f, "y");</input>
	<input name="Z" location="rshoulder1" type="BUTTON|AXIS|HAT|KEY">writePair(f, "z");</input>
	
	<input name="Start" location="start" type="BUTTON|AXIS|HAT|KEY">writePair(f, "start");</input>
	<input name="Mode" location="select" type="BUTTON|AXIS|HAT|KEY">writePair(f, "mode");</input>

	<input name="Up" location="up" type="BUTTON|AXIS|HAT|KEY">writePair(f, "up");</input>
	<input name="Down" location="down" type="BUTTON|AXIS|HAT|KEY">writePair(f, "down");</input>
	<input name="Left" location="left" type="BUTTON|AXIS|HAT|KEY">writePair(f, "left");</input>
	<input name="Right" location="right" type="BUTTON|AXIS|HAT|KEY">writePair(f, "right");</input>

</emulator>
